---
// src/pages/dashboard.astro
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import { BACKEND_URL } from '../config';

// Überprüfe, ob das Astro-Cookie vorhanden ist
const token = Astro.cookies.get('token')?.value;
if (!token) {
    return Astro.redirect('/login?error=Bitte melden Sie sich an, um fortzufahren.');
}

// Diese Werte würden eigentlich aus dem Token oder durch eine API-Anfrage abgerufen
// Hier verwenden wir statische Werte als Platzhalter
const user = "Admin User";
const email = "admin@peopleflow.com";
const userRole = "admin";
const year = new Date().getFullYear();
---

<Layout title="Dashboard - PeopleFlow">
    <Navigation active="dashboard" user={user} email={email} userRole={userRole} year={year} />

    <main class="py-10">
        <div class="px-4 sm:px-6 lg:px-8">
            <div id="dashboard-content">
                <!-- Ladeanimation anzeigen, bis Daten geladen sind -->
                <div class="flex justify-center items-center py-12">
                    <svg class="animate-spin -ml-1 mr-3 h-10 w-10 text-green-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    <span class="text-gray-600 text-lg">Lade Dashboard-Daten...</span>
                </div>
            </div>
        </div>
    </main>

    <Footer year={year} />

    <script define:vars={{ BACKEND_URL }}>
        // Funktion zum Abrufen der Dashboard-Daten
        async function fetchDashboardData() {
            try {
                const response = await fetch(`${BACKEND_URL}/api/dashboard`, {
                    credentials: 'include' // Cookies senden für JWT-Authentifizierung
                });

                // Bei Authentifizierungsproblemen zur Login-Seite umleiten
                if (response.status === 401) {
                    window.location.href = '/login?error=Sitzung abgelaufen. Bitte melden Sie sich erneut an.';
                    return null;
                }

                if (!response.ok) {
                    throw new Error('Fehler beim Laden der Dashboard-Daten');
                }

                return await response.json();
            } catch (error) {
                console.error('Fehler beim Abrufen der Dashboard-Daten:', error);

                // Fallback zu Demo-Daten, wenn API-Anfrage fehlschlägt
                return {
                    userRole: 'admin',
                    totalEmployees: 45,
                    monthlyLaborCosts: "48.325,00",
                    upcomingReviews: 3,
                    expiredDocuments: 2,
                    // Weitere Demo-Daten...
                };
            }
        }

        // Funktion zum Rendern des Dashboards basierend auf der Benutzerrolle
        function renderDashboard(data) {
            // Implementierung wie zuvor
            // ...
        }

        // Dashboard-Daten laden und rendern, wenn die Seite geladen ist
        document.addEventListener('DOMContentLoaded', async function() {
            const dashboardData = await fetchDashboardData();
            if (dashboardData) {
                renderDashboard(dashboardData);
            }
        });
    </script>
</Layout>