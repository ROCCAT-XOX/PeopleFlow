---
// src/pages/dashboard-new.astro
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import { BACKEND_URL } from '../config';

// Check authentication
const token = Astro.cookies.get('token')?.value;
if (!token) {
    return Astro.redirect('/login?error=Bitte melden Sie sich an, um fortzufahren.');
}

// Parse JWT to get user info
function parseJwt(token: string) {
    try {
        return JSON.parse(atob(token.split('.')[1]));
    } catch (e) {
        return null;
    }
}

const tokenData = parseJwt(token);
const userRole = tokenData?.role || 'user';
const userEmail = tokenData?.email || '';
const userName = tokenData?.firstName + ' ' + tokenData?.lastName || 'User';
const year = new Date().getFullYear();
---

<Layout title="Dashboard - PeopleFlow">
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes slideIn {
            from { transform: translateX(-100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
        
        @keyframes shimmer {
            0% { background-position: -1000px 0; }
            100% { background-position: 1000px 0; }
        }
        
        .fade-in {
            animation: fadeIn 0.6s ease-out forwards;
        }
        
        .slide-in {
            animation: slideIn 0.8s ease-out forwards;
        }
        
        .glass-effect {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .neon-glow {
            box-shadow: 0 0 20px rgba(34, 197, 94, 0.3), 
                        0 0 40px rgba(34, 197, 94, 0.1);
        }
        
        .gradient-border {
            background: linear-gradient(135deg, #22c55e 0%, #15803d 100%);
            padding: 2px;
            border-radius: 16px;
        }
        
        .hover-lift {
            transition: all 0.3s ease;
        }
        
        .hover-lift:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);
        }
        
        .loading-skeleton {
            background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
            background-size: 1000px 100%;
            animation: shimmer 2s infinite;
        }
        
        .metric-card {
            position: relative;
            overflow: hidden;
        }
        
        .metric-card::before {
            content: '';
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(135deg, #22c55e, #15803d, #22c55e);
            border-radius: 16px;
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: -1;
        }
        
        .metric-card:hover::before {
            opacity: 1;
        }
        
        .chart-container {
            position: relative;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 12px;
            padding: 20px;
        }
        
        .futuristic-btn {
            position: relative;
            overflow: hidden;
            background: linear-gradient(135deg, #22c55e 0%, #15803d 100%);
            color: white;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .futuristic-btn:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 20px rgba(34, 197, 94, 0.4);
        }
        
        .futuristic-btn::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.3);
            transform: translate(-50%, -50%);
            transition: width 0.3s, height 0.3s;
        }
        
        .futuristic-btn:active::after {
            width: 300px;
            height: 300px;
        }
    </style>

    <Navigation active="dashboard" user={userName} email={userEmail} userRole={userRole} year={year} />

    <main class="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
        <div class="px-4 sm:px-6 lg:px-8 py-8">
            <!-- Dashboard Header -->
            <div class="mb-8 fade-in">
                <h1 class="text-4xl font-bold bg-gradient-to-r from-green-600 to-green-800 bg-clip-text text-transparent">
                    {userRole === 'user' ? 'Mein Dashboard' : 'Management Dashboard'}
                </h1>
                <p class="mt-2 text-gray-600">
                    Willkommen zur√ºck, {userName}
                </p>
            </div>

            <!-- Dashboard Content Container -->
            <div id="dashboard-content">
                <!-- Loading State -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                    {[1, 2, 3, 4].map(() => (
                        <div class="loading-skeleton h-32 rounded-xl"></div>
                    ))}
                </div>
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    <div class="lg:col-span-2">
                        <div class="loading-skeleton h-96 rounded-xl"></div>
                    </div>
                    <div>
                        <div class="loading-skeleton h-96 rounded-xl"></div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <Footer year={year} />

    <script define:vars={{ BACKEND_URL, token }}>
        // Fetch dashboard data from backend
        async function fetchDashboardData() {
            try {
                const response = await fetch(`${BACKEND_URL}/dashboard`, {
                    method: 'GET',
                    headers: {
                        'Cookie': `token=${token}`,
                        'Accept': 'text/html',
                    },
                    credentials: 'include'
                });

                if (response.status === 401) {
                    window.location.href = '/login?error=Sitzung abgelaufen';
                    return null;
                }

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const html = await response.text();
                
                // Parse the HTML to extract data
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                
                // Extract user role from the page
                const userRoleElement = doc.querySelector('[data-user-role]');
                const userRole = userRoleElement ? userRoleElement.getAttribute('data-user-role') : 
                                doc.body.innerHTML.includes('USER DASHBOARD') ? 'user' : 'admin';
                
                // Extract metrics based on role
                if (userRole === 'user') {
                    return extractUserDashboardData(doc);
                } else {
                    return extractAdminDashboardData(doc);
                }
            } catch (error) {
                console.error('Error fetching dashboard data:', error);
                return getMockData();
            }
        }
        
        function extractUserDashboardData(doc) {
            // Extract overtime balance
            const overtimeElement = doc.querySelector('.stat-card .text-2xl');
            const overtimeText = overtimeElement ? overtimeElement.textContent.trim() : '+0.0 Std';
            const overtimeMatch = overtimeText.match(/([+-]?\d+\.?\d*)/);
            const overtimeBalance = overtimeMatch ? parseFloat(overtimeMatch[1]) : 0;
            
            // Extract vacation days
            const vacationElements = doc.querySelectorAll('.stat-card');
            let remainingVacation = 0;
            let totalVacation = 30;
            let usedVacation = 0;
            
            vacationElements.forEach(card => {
                const title = card.querySelector('.text-gray-500')?.textContent || '';
                const value = card.querySelector('.text-2xl')?.textContent || '';
                
                if (title.includes('Resturlaub')) {
                    const match = value.match(/(\d+)/);
                    remainingVacation = match ? parseInt(match[1]) : 0;
                    const totalMatch = card.textContent.match(/von (\d+) Tagen/);
                    totalVacation = totalMatch ? parseInt(totalMatch[1]) : 30;
                } else if (title.includes('Genommener Urlaub')) {
                    const match = value.match(/(\d+)/);
                    usedVacation = match ? parseInt(match[1]) : 0;
                }
            });
            
            return {
                userRole: 'user',
                overtimeBalance,
                remainingVacation,
                totalVacation,
                usedVacation,
                pendingAbsences: 0,
                recentActivities: []
            };
        }
        
        function extractAdminDashboardData(doc) {
            const stats = doc.querySelectorAll('.stat-card, .flex.items-center.p-4.bg-white');
            let totalEmployees = 45;
            let monthlyLaborCosts = "48,325.00";
            let upcomingReviews = 3;
            let expiredDocuments = 2;
            
            stats.forEach(stat => {
                const label = stat.querySelector('.text-gray-500')?.textContent || '';
                const value = stat.querySelector('.text-2xl')?.textContent || '';
                
                if (label.includes('Gesamtmitarbeiter')) {
                    totalEmployees = parseInt(value) || 45;
                } else if (label.includes('Personalkosten')) {
                    monthlyLaborCosts = value.replace('‚Ç¨', '').trim();
                } else if (label.includes('Gespr√§che')) {
                    upcomingReviews = parseInt(value) || 3;
                } else if (label.includes('Dokumente')) {
                    expiredDocuments = parseInt(value) || 2;
                }
            });
            
            return {
                userRole: 'admin',
                totalEmployees,
                monthlyLaborCosts,
                upcomingReviews,
                expiredDocuments,
                recentActivities: [],
                chartData: getDefaultChartData()
            };
        }
        
        function getMockData() {
            const userRole = document.body.getAttribute('data-user-role') || 'admin';
            
            if (userRole === 'user') {
                return {
                    userRole: 'user',
                    overtimeBalance: 12.5,
                    remainingVacation: 18,
                    totalVacation: 30,
                    usedVacation: 12,
                    pendingAbsences: 1,
                    recentActivities: [
                        { type: 'vacation_approved', date: '2024-01-15', description: 'Urlaubsantrag genehmigt' },
                        { type: 'overtime_adjusted', date: '2024-01-10', description: '√úberstunden angepasst: +4.5 Std' }
                    ]
                };
            }
            
            return {
                userRole: 'admin',
                totalEmployees: 45,
                monthlyLaborCosts: "48,325.00",
                upcomingReviews: 3,
                expiredDocuments: 2,
                recentActivities: [
                    { type: 'employee_added', name: 'Max Mustermann', time: 'vor 2 Stunden' },
                    { type: 'vacation_requested', name: 'Anna Schmidt', time: 'vor 5 Stunden' },
                    { type: 'document_expiring', name: 'Arbeitsvertrag - Tom Weber', time: 'vor 1 Tag' }
                ],
                chartData: getDefaultChartData()
            };
        }
        
        function getDefaultChartData() {
            return {
                monthlyTrend: {
                    labels: ['Jan', 'Feb', 'M√§r', 'Apr', 'Mai', 'Jun'],
                    datasets: [{
                        label: 'Personalkosten',
                        data: [42000, 44500, 46000, 48325, 47800, 49000],
                        borderColor: '#22c55e',
                        backgroundColor: 'rgba(34, 197, 94, 0.1)',
                        tension: 0.4
                    }]
                },
                departmentDistribution: {
                    labels: ['Entwicklung', 'Marketing', 'Vertrieb', 'HR', 'Finanzen'],
                    datasets: [{
                        data: [12, 8, 15, 5, 5],
                        backgroundColor: [
                            '#22c55e',
                            '#16a34a',
                            '#15803d',
                            '#166534',
                            '#14532d'
                        ]
                    }]
                }
            };
        }
        
        function renderUserDashboard(data) {
            const { overtimeBalance, remainingVacation, totalVacation, usedVacation, pendingAbsences } = data;
            
            return `
                <!-- User Metrics -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                    <!-- Overtime Balance -->
                    <div class="metric-card glass-effect rounded-xl p-6 hover-lift fade-in" style="animation-delay: 0.1s">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm text-gray-600 mb-1">√úberstunden-Saldo</p>
                                <p class="text-3xl font-bold ${overtimeBalance >= 0 ? 'text-green-600' : 'text-red-600'}">
                                    ${overtimeBalance >= 0 ? '+' : ''}${overtimeBalance.toFixed(1)} Std
                                </p>
                            </div>
                            <div class="p-4 rounded-full ${overtimeBalance >= 0 ? 'bg-green-100' : 'bg-red-100'}">
                                <svg class="h-8 w-8 ${overtimeBalance >= 0 ? 'text-green-600' : 'text-red-600'}" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                            </div>
                        </div>
                        <div class="mt-4 pt-4 border-t border-gray-200">
                            <div class="flex justify-between text-sm">
                                <span class="text-gray-500">Trend</span>
                                <span class="${overtimeBalance >= 0 ? 'text-green-600' : 'text-red-600'}">
                                    ${overtimeBalance >= 0 ? '‚Üë' : '‚Üì'} ${Math.abs(overtimeBalance * 0.1).toFixed(1)} Std
                                </span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Vacation Days -->
                    <div class="metric-card glass-effect rounded-xl p-6 hover-lift fade-in" style="animation-delay: 0.2s">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm text-gray-600 mb-1">Resturlaub</p>
                                <p class="text-3xl font-bold text-gray-900">${remainingVacation} Tage</p>
                                <p class="text-sm text-gray-500 mt-1">von ${totalVacation} Tagen</p>
                            </div>
                            <div class="p-4 rounded-full bg-blue-100">
                                <svg class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                            </div>
                        </div>
                        <div class="mt-4">
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-blue-600 h-2 rounded-full transition-all duration-500" style="width: ${(remainingVacation / totalVacation) * 100}%"></div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Used Vacation -->
                    <div class="metric-card glass-effect rounded-xl p-6 hover-lift fade-in" style="animation-delay: 0.3s">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm text-gray-600 mb-1">Genommener Urlaub</p>
                                <p class="text-3xl font-bold text-gray-900">${usedVacation} Tage</p>
                                <p class="text-sm text-gray-500 mt-1">dieses Jahr</p>
                            </div>
                            <div class="p-4 rounded-full bg-yellow-100">
                                <svg class="h-8 w-8 text-yellow-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Pending Absences -->
                    <div class="metric-card glass-effect rounded-xl p-6 hover-lift fade-in" style="animation-delay: 0.4s">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm text-gray-600 mb-1">Ausstehende Antr√§ge</p>
                                <p class="text-3xl font-bold text-gray-900">${pendingAbsences}</p>
                                <p class="text-sm text-gray-500 mt-1">zur Genehmigung</p>
                            </div>
                            <div class="p-4 rounded-full bg-purple-100">
                                <svg class="h-8 w-8 text-purple-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- User Activity and Quick Actions -->
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    <!-- Recent Activities -->
                    <div class="lg:col-span-2 glass-effect rounded-xl p-6 fade-in" style="animation-delay: 0.5s">
                        <h3 class="text-xl font-semibold text-gray-800 mb-4">Letzte Aktivit√§ten</h3>
                        <div class="space-y-4">
                            ${data.recentActivities.length > 0 ? data.recentActivities.map(activity => `
                                <div class="flex items-center p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                                    <div class="flex-shrink-0 mr-4">
                                        <div class="p-2 rounded-full bg-green-100">
                                            <svg class="h-6 w-6 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                            </svg>
                                        </div>
                                    </div>
                                    <div class="flex-1">
                                        <p class="text-sm font-medium text-gray-900">${activity.description}</p>
                                        <p class="text-sm text-gray-500">${activity.date}</p>
                                    </div>
                                </div>
                            `).join('') : `
                                <div class="text-center py-8 text-gray-500">
                                    <svg class="mx-auto h-12 w-12 text-gray-400 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
                                    </svg>
                                    <p>Keine k√ºrzlichen Aktivit√§ten</p>
                                </div>
                            `}
                        </div>
                    </div>
                    
                    <!-- Quick Actions -->
                    <div class="glass-effect rounded-xl p-6 fade-in" style="animation-delay: 0.6s">
                        <h3 class="text-xl font-semibold text-gray-800 mb-4">Schnellzugriff</h3>
                        <div class="space-y-3">
                            <a href="/profile" class="futuristic-btn w-full text-center block">
                                Mein Profil
                            </a>
                            <a href="/absences/request" class="futuristic-btn w-full text-center block">
                                Abwesenheit beantragen
                            </a>
                            <a href="/timetracking" class="futuristic-btn w-full text-center block">
                                Zeiterfassung
                            </a>
                            <a href="/documents" class="futuristic-btn w-full text-center block">
                                Meine Dokumente
                            </a>
                        </div>
                    </div>
                </div>
            `;
        }
        
        function renderAdminDashboard(data) {
            const { totalEmployees, monthlyLaborCosts, upcomingReviews, expiredDocuments } = data;
            
            return `
                <!-- Admin Metrics -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                    <!-- Total Employees -->
                    <div class="metric-card glass-effect rounded-xl p-6 hover-lift fade-in" style="animation-delay: 0.1s">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm text-gray-600 mb-1">Gesamtmitarbeiter</p>
                                <p class="text-3xl font-bold text-gray-900">${totalEmployees}</p>
                                <p class="text-sm text-green-600 mt-1">‚Üë 2 neue diesen Monat</p>
                            </div>
                            <div class="p-4 rounded-full bg-gradient-to-br from-green-100 to-green-200">
                                <svg class="h-8 w-8 text-green-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                                </svg>
                            </div>
                        </div>
                        <div class="mt-4 pt-4 border-t border-gray-200">
                            <div class="text-xs text-gray-500">Aktive: ${totalEmployees - 3} | Urlaub: 3</div>
                        </div>
                    </div>
                    
                    <!-- Monthly Labor Costs -->
                    <div class="metric-card glass-effect rounded-xl p-6 hover-lift fade-in" style="animation-delay: 0.2s">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm text-gray-600 mb-1">Monatliche Personalkosten</p>
                                <p class="text-3xl font-bold text-gray-900">‚Ç¨${monthlyLaborCosts}</p>
                                <p class="text-sm text-red-600 mt-1">‚Üë 3.2% vs. Vormonat</p>
                            </div>
                            <div class="p-4 rounded-full bg-gradient-to-br from-blue-100 to-blue-200">
                                <svg class="h-8 w-8 text-blue-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                            </div>
                        </div>
                        <div class="mt-4 pt-4 border-t border-gray-200">
                            <div class="text-xs text-gray-500">Budget: ‚Ç¨52,000 | Auslastung: 92.9%</div>
                        </div>
                    </div>
                    
                    <!-- Upcoming Reviews -->
                    <div class="metric-card glass-effect rounded-xl p-6 hover-lift fade-in" style="animation-delay: 0.3s">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm text-gray-600 mb-1">Anstehende Gespr√§che</p>
                                <p class="text-3xl font-bold text-gray-900">${upcomingReviews}</p>
                                <p class="text-sm text-orange-600 mt-1">Diese Woche f√§llig</p>
                            </div>
                            <div class="p-4 rounded-full bg-gradient-to-br from-yellow-100 to-yellow-200">
                                <svg class="h-8 w-8 text-yellow-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                            </div>
                        </div>
                        <div class="mt-4">
                            <a href="/reviews" class="text-sm text-green-600 hover:text-green-700 font-medium">Alle anzeigen ‚Üí</a>
                        </div>
                    </div>
                    
                    <!-- Expired Documents -->
                    <div class="metric-card glass-effect rounded-xl p-6 hover-lift fade-in" style="animation-delay: 0.4s">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm text-gray-600 mb-1">Abgelaufene Dokumente</p>
                                <p class="text-3xl font-bold text-gray-900">${expiredDocuments}</p>
                                <p class="text-sm text-red-600 mt-1">Aktion erforderlich</p>
                            </div>
                            <div class="p-4 rounded-full bg-gradient-to-br from-red-100 to-red-200">
                                <svg class="h-8 w-8 text-red-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                                </svg>
                            </div>
                        </div>
                        <div class="mt-4">
                            <a href="/documents/expired" class="text-sm text-green-600 hover:text-green-700 font-medium">Dokumente pr√ºfen ‚Üí</a>
                        </div>
                    </div>
                </div>
                
                <!-- Charts and Activities -->
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    <!-- Main Chart Area -->
                    <div class="lg:col-span-2 space-y-6">
                        <!-- Cost Trend Chart -->
                        <div class="glass-effect rounded-xl p-6 fade-in" style="animation-delay: 0.5s">
                            <div class="flex items-center justify-between mb-4">
                                <h3 class="text-xl font-semibold text-gray-800">Personalkosten-Trend</h3>
                                <select class="text-sm border-gray-300 rounded-lg focus:ring-green-500 focus:border-green-500">
                                    <option>Letzte 6 Monate</option>
                                    <option>Letztes Jahr</option>
                                    <option>Dieses Jahr</option>
                                </select>
                            </div>
                            <div class="chart-container" style="height: 300px;">
                                <canvas id="costTrendChart"></canvas>
                            </div>
                        </div>
                        
                        <!-- Department Distribution -->
                        <div class="glass-effect rounded-xl p-6 fade-in" style="animation-delay: 0.6s">
                            <h3 class="text-xl font-semibold text-gray-800 mb-4">Abteilungsverteilung</h3>
                            <div class="chart-container" style="height: 300px;">
                                <canvas id="departmentChart"></canvas>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Side Panel -->
                    <div class="space-y-6">
                        <!-- Recent Activities -->
                        <div class="glass-effect rounded-xl p-6 fade-in" style="animation-delay: 0.7s">
                            <h3 class="text-xl font-semibold text-gray-800 mb-4">Letzte Aktivit√§ten</h3>
                            <div class="space-y-4">
                                ${data.recentActivities.map(activity => `
                                    <div class="flex items-start space-x-3">
                                        <div class="flex-shrink-0">
                                            <div class="p-2 rounded-full ${
                                                activity.type === 'employee_added' ? 'bg-green-100' :
                                                activity.type === 'vacation_requested' ? 'bg-blue-100' :
                                                'bg-yellow-100'
                                            }">
                                                <svg class="h-5 w-5 ${
                                                    activity.type === 'employee_added' ? 'text-green-600' :
                                                    activity.type === 'vacation_requested' ? 'text-blue-600' :
                                                    'text-yellow-600'
                                                }" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="${
                                                        activity.type === 'employee_added' ? 'M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z' :
                                                        activity.type === 'vacation_requested' ? 'M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z' :
                                                        'M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z'
                                                    }" />
                                                </svg>
                                            </div>
                                        </div>
                                        <div class="flex-1 min-w-0">
                                            <p class="text-sm font-medium text-gray-900">
                                                ${activity.name || activity.description || 'Neue Aktivit√§t'}
                                            </p>
                                            <p class="text-sm text-gray-500">${activity.time}</p>
                                        </div>
                                    </div>
                                `).join('')}
                            </div>
                            <div class="mt-4 pt-4 border-t border-gray-200">
                                <a href="/activities" class="text-sm text-green-600 hover:text-green-700 font-medium">Alle Aktivit√§ten ‚Üí</a>
                            </div>
                        </div>
                        
                        <!-- Quick Actions -->
                        <div class="glass-effect rounded-xl p-6 fade-in" style="animation-delay: 0.8s">
                            <h3 class="text-xl font-semibold text-gray-800 mb-4">Schnellaktionen</h3>
                            <div class="space-y-3">
                                <a href="/employees/add" class="futuristic-btn w-full text-center block">
                                    <svg class="inline-block w-5 h-5 mr-2 -mt-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                                    </svg>
                                    Mitarbeiter hinzuf√ºgen
                                </a>
                                <a href="/reports/generate" class="futuristic-btn w-full text-center block">
                                    <svg class="inline-block w-5 h-5 mr-2 -mt-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                    </svg>
                                    Report erstellen
                                </a>
                                <a href="/absences/pending" class="futuristic-btn w-full text-center block">
                                    <svg class="inline-block w-5 h-5 mr-2 -mt-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                    Antr√§ge pr√ºfen
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        }
        
        function initCharts(data) {
            if (!data.chartData) return;
            
            // Cost Trend Chart
            const costCtx = document.getElementById('costTrendChart');
            if (costCtx) {
                new Chart(costCtx.getContext('2d'), {
                    type: 'line',
                    data: data.chartData.monthlyTrend,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                mode: 'index',
                                intersect: false,
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                titleColor: '#fff',
                                bodyColor: '#fff',
                                borderColor: '#22c55e',
                                borderWidth: 1,
                                callbacks: {
                                    label: function(context) {
                                        return '‚Ç¨' + context.parsed.y.toLocaleString('de-DE');
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return '‚Ç¨' + value.toLocaleString('de-DE');
                                    }
                                }
                            }
                        }
                    }
                });
            }
            
            // Department Chart
            const deptCtx = document.getElementById('departmentChart');
            if (deptCtx) {
                new Chart(deptCtx.getContext('2d'), {
                    type: 'doughnut',
                    data: data.chartData.departmentDistribution,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    padding: 15,
                                    font: {
                                        size: 12
                                    }
                                }
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                titleColor: '#fff',
                                bodyColor: '#fff',
                                borderColor: '#22c55e',
                                borderWidth: 1
                            }
                        }
                    }
                });
            }
        }
        
        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', async function() {
            try {
                const data = await fetchDashboardData();
                const container = document.getElementById('dashboard-content');
                
                if (data && container) {
                    container.innerHTML = data.userRole === 'user' ? 
                        renderUserDashboard(data) : 
                        renderAdminDashboard(data);
                    
                    // Initialize charts for admin dashboard
                    if (data.userRole !== 'user' && data.chartData) {
                        setTimeout(() => initCharts(data), 100);
                    }
                }
            } catch (error) {
                console.error('Dashboard initialization error:', error);
            }
        });
    </script>
</Layout>